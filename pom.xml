<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.bee42</groupId>
  <artifactId>ping</artifactId>
  <packaging>jar</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>ping</name>
  <url>http://www.bee42.com</url>

  <properties>
    <tomcat.version>8.0.53</tomcat.version>
    <jolokia.version>1.2.2</jolokia.version>
    <jersey.version>2.11</jersey.version>
    <jackson.version>2.4.0</jackson.version>
    <docker.maven.plugin.version>0.13.9</docker.maven.plugin.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <maven.compiler.source>1.6</maven.compiler.source>
    <maven.compiler.target>1.6</maven.compiler.target>
  </properties>

  <dependencies>

    <!-- Tomcat -->

    <dependency>
        <groupId>org.apache.tomcat</groupId>
        <artifactId>tomcat-juli</artifactId>
        <version>${tomcat.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-core</artifactId>
      <version>${tomcat.version}</version>
    </dependency>

    <!-- REST -->

    <dependency>
        <groupId>org.glassfish.jersey.core</groupId>
        <artifactId>jersey-common</artifactId>
        <version>${jersey.version}</version>
        <exclusions>
            <exclusion>
                <groupId>javax.annotation</groupId>
                <artifactId>annotation-api</artifactId>
            </exclusion>
        </exclusions>
    </dependency>

    <dependency>
     <groupId>org.glassfish.jersey.containers</groupId>
     <artifactId>jersey-container-servlet</artifactId>
     <version>${jersey.version}</version>
     <exclusions>
          <exclusion>
              <groupId>org.glassfish.jersey.core</groupId>
              <artifactId>jersey-common</artifactId>
          </exclusion>
      </exclusions>
    </dependency>

    <dependency>
       <groupId>org.glassfish.jersey.core</groupId>
       <artifactId>jersey-client</artifactId>
       <version>${jersey.version}</version>
    </dependency>
    <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <version>${jersey.version}</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.jaxrs</groupId>
      <artifactId>jackson-jaxrs-json-provider</artifactId>
      <version>${jackson.version}</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>${jackson.version}</version>
    </dependency>

   <!-- Test -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.jayway.restassured</groupId>
      <artifactId>rest-assured</artifactId>
      <version>2.3.1</version>
      <scope>test</scope>
    </dependency>

  </dependencies>


  <build>
    <finalName>ping</finalName>
    <plugins>

      <!--
       The Shade plugin simply packs all dependencies into a single jar, optionally with specifyin a main class.
       There are much more options, please refer to its documentation.

       The important thing is, that the artifact created by this build will be replaced with the fat-jar
       -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.3</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>com.bee42.ping.tomcat.StartService</mainClass>
                </transformer>
              </transformers>
              <artifactSet>
                <excludes>
                  <exclude>javax.annotation:javax.annotation-api</exclude>
                </excludes>
              </artifactSet>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <!-- The Docker Maven plugin is used to create docker image with the fat jar -->
        <groupId>org.jolokia</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>${docker.maven.plugin.version}</version>
        <configuration>
          <!-- Docker Image to use -->
          <image>java</image>
          <dataImage>bee42/${project.artifactId}:${project.version}</dataImage>
          <!-- Merging with the base image -->
          <mergeData>true</mergeData>
          <command>java -Djava.security.egd=file:/dev/./urandom -jar /opt/${project.build.finalName}/${project.build.finalName}.jar</command>
          <ports>
            <port>tomcat.port:8080</port>
          </ports>
          <dataExportDir>/opt/${project.build.finalName}</dataExportDir>
          <waitHttp>http://localhost:${tomcat.port}/rest/ping</waitHttp>
          <wait>10000</wait>
          <!-- Assembly descriptor holds the reference to the created artifact-->
          <assemblyDescriptor>src/main/docker-assembly.xml</assemblyDescriptor>
        </configuration>

        <executions>
          <execution>
            <id>start</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>stop</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.17</version>
        <executions>
          <execution>
            <id>integration-test</id>
            <goals>
              <goal>integration-test</goal>
            </goals>
          </execution>
          <execution>
            <id>verify</id>
            <goals>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>

        <configuration>
          <systemPropertyVariables>
            <ping.url>http://localhost:${tomcat.port}/rest</ping.url>
            <ping.message>Pong</ping.message>
          </systemPropertyVariables>
        </configuration>
      </plugin>


      <!-- Tell surefire to skip test, we are using the failsafe plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.10</version>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
